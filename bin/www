#!/usr/bin/env node
var debug = require('debug')('setsudenkun2'),
    app = require('../app'),
    db = require('../db');

var SECRET = "9D97EF29-CDDD-4081-B3E3-E9AE8D63930D";
var SID_KEY = 'connect.sid';

app.set('port', process.env.PORT || 8080);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});


var Session = require('express-session').Session;
var io = require('socket.io')(server);
io.on('connection', function (socket) {
    var sessId, cookie = socket.request.headers.cookie;
    console.log('io on connection: cookie contents is... ' + cookie);
    if (cookie) {
        cookie = require('cookie').parse(cookie);
        cookie = require('cookie-parser/lib/parse').signedCookies(cookie, SECRET);
        sessId = socket.sessionId = cookie[SID_KEY];
    } else {
        sessId = "";
    }

    app.sessionStore.get(sessId, function (err, sessionData) {
        if (!err) {
            socket.session = new Session({sessionID: sessId, sessionStore: app.sessionStore}, sessionData);
            console.log("in connection handler session content...");
            console.log(socket.session);
        } else {
            debug(err);
        }
        var uid = digestMd5(sessId);
        var roomId = socket.session.roomId;
        // 一時間以内に作られたアイコン
        var conditions = {
            roomId: roomId,
            timestamp: {"$gte": getOneHourAgo()}
        };
        db.icons.find(conditions).toArray().then(function(docs){
            console.log("fetch data from db..." + docs);
            socket.emit('hello', {uid: uid, roomId: roomId, members: docs});
        }, function (e) {
            console.log('failure.');
            console.log(e);
        });
    });

    socket.on('set icon', function (data) {
        console.log('receive: set icon...');
        data._id = data.uid;
        data.timestamp = new Date();
        console.log(data);
        db.icons.save(data);
        io.sockets.emit('set icon', data);
    });

    socket.on('unset icon', function (data) {
        console.log('receive: unset icon...');
        data._id = data.uid;
        console.log(data);
        var conditions = {
                _id: data._id,
                roomId: data.roomId
            },
            justOne = true;
        db.icons.remove(conditions, justOne);
        io.sockets.emit('unset icon', data);
    });
});

// MD5ハッシュの計算
var crypto = require('crypto');
function digestMd5(str) {
    var s = crypto.pseudoRandomBytes(16).toString('hex');
    return crypto.createHash('md5').update(str || s).digest('hex');
}
// 一時間前を求める
var moment = require('moment');
function getOneHourAgo() {
    return moment().subtract(1, 'hours').toDate();
}
